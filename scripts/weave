#!/bin/bash

script_dir=$(dirname "$(readlink -f "$0")")

format="markdown+fenced_code_attributes+citations+all_symbols_escapable+fenced_divs+multiline_tables+fenced_divs+bracketed_spans"
pandoc_filters="pandoc-eqnos pandoc-fignos pandoc-citeproc"

filter_args=$(echo ${pandoc_filters} | sed -e 's/\([^ ]*\)/--filter \1/g')
pdf_args="--toc ${filter_args} --lua-filter ${script_dir}/annotate-code-blocks.lua --template ${script_dir}/eisvogel.tex --listings"
html_args="-s --toc --toc-depth=3 ${filter_args} --lua-filter ${script_dir}/annotate-code-blocks.lua --mathjax --css style.css --base-header-level=2"

target="html"
output="./public/index.html"
css_file="${script_dir}/style.css"
html_header="${script_dir}/header.html"
sources=""

usage () {
    echo "Weave script"
    echo "usage: weave [options] <sources>"
    echo
    echo "By default, this builds HTML output from the list of Markdown"
    echo "sources. The output defaults to './public/index.html'."
    echo "If `--pdf` is chosen, the default output is set to 'report.pdf'."
    echo
    echo "options:"
    echo "  --html           generate HTML"
    echo "  --pdf            generate PDF"
    echo "  --native         generate Pandoc native (for debugging)"
    echo "  --output=<path>  name of output file"
    echo "  --css=<path>     name of CSS file"
    echo "  --header=<path>  name of HTML header"
}

for i in "$@"
do
    case $i in
        --output=*)
            output="${i#*=}"
            shift
            ;;
        --css=*)
            css_file="${i#*=}"
            shift
            ;;
        --html)
            target="html"
            shift
            ;;
        --header=*)
            html_header="${i#*=}"
            shift
            ;; 
        --pdf)
            target="pdf"
            output="report.pdf"
            shift
            ;;
        --native)
            target="native"
            shift
            ;;
        --help)
            usage
            exit 0
            ;;
        --*)
            echo "unknown argument: ${i}"
            usage
            exit 1
            ;;
        *)
            sources="${sources} ${i}"
            ;;
    esac
done

case ${target} in
    html)
        mkdir -p "$(dirname ${output})"
        # cp "${css_file}" "$(dirname ${output})/style.css"
        pandoc ${sources} -f ${format} ${html_args} -H ${html_header} -t html5 -o "${output}"
        ;;
    pdf)
        pandoc ${sources} -f ${format} ${pdf_args} -t latex -o "${output}" --pdf-engine=xelatex
        ;;
    native)
        pandoc ${sources} -f ${format} -s -t native
        ;;
    *)
        echo "ERROR: unknown target '${target}'"
        exit 1
        ;;
esac
